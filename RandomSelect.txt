#include <iostream>
#include <cstdlib> // for rand() and srand()
#include <ctime> // for time()

using namespace std;

// partition function for quicksort
int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j <= high - 1; j++) {
        if (arr[j] <= pivot) {
            i++;
            swap(arr[i], arr[j]);
        }
    }

    swap(arr[i+1], arr[high]);
    return i + 1;
}

// randomized partition function for randomized select
int randomized_partition(int arr[], int low, int high) {
    srand(time(NULL));
    int random = low + rand() % (high - low + 1);
    swap(arr[random], arr[high]);
    return partition(arr, low, high);
}

// randomized select function to find ith order statistic
int randomized_select(int arr[], int low, int high, int i) {
    if (low == high)
        return arr[low];

    int pivot_index = randomized_partition(arr, low, high);
    int k = pivot_index - low + 1;

    if (i == k)
        return arr[pivot_index];
    else if (i < k)
        return randomized_select(arr, low, pivot_index - 1, i);
    else
        return randomized_select(arr, pivot_index + 1, high, i - k);
}

int main() {
    int arr[] = {5, 2, 8, 4, 9, 3};
    int n = sizeof(arr) / sizeof(arr[0]);
    int i = 4; // find the 4th order statistic

    int ith_order_statistic = randomized_select(arr, 0, n-1, i);
    cout << "The " << i << "th order statistic is: " << ith_order_statistic << endl;

    return 0;
}
